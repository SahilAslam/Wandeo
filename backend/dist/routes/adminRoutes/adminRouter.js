"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminController_1 = require("../../controllers/adminController/adminController");
const adminAuthMiddleware_1 = require("../../middlewares/adminAuthMiddleware");
const adminRouter = express_1.default.Router();
adminRouter.post('/login', adminController_1.adminLogin);
adminRouter.get('/', adminAuthMiddleware_1.adminProtect, adminController_1.adminDashboard);
adminRouter.get('/usersList', adminAuthMiddleware_1.adminProtect, adminController_1.getUsers);
adminRouter.patch('/blockUser/:id', adminAuthMiddleware_1.adminProtect, adminController_1.blockUser);
adminRouter.patch('/unblockUser/:id', adminAuthMiddleware_1.adminProtect, adminController_1.unblockUser);
adminRouter.get('/findUsers', adminAuthMiddleware_1.adminProtect, adminController_1.findUsers);
adminRouter.get('/getGroups', adminAuthMiddleware_1.adminProtect, adminController_1.getGroups);
adminRouter.get('/getEvents', adminAuthMiddleware_1.adminProtect, adminController_1.getEvents);
adminRouter.get('/gethost', adminAuthMiddleware_1.adminProtect, adminController_1.getHosts);
adminRouter.patch('/blockGroup/:id', adminAuthMiddleware_1.adminProtect, adminController_1.blockGroup);
adminRouter.patch('/unblockGroup/:id', adminAuthMiddleware_1.adminProtect, adminController_1.unblockGroup);
exports.default = adminRouter;
